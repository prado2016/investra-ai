name: Platform CI Checks

on:
  push:
    branches: [ main, master, develop ]
    paths-ignore:
      - '**.md'
      - 'docs/**'
      - '.github/workflows-archive-*/**'
  pull_request:
    branches: [ main, master ]
    paths-ignore:
      - '**.md'
      - 'docs/**'
      - '.github/workflows-archive-*/**'

env:
  NODE_VERSION: '18'

jobs:
  code-quality-checks:
    name: Code Quality & Linting
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run ESLint
      run: npm run lint || true

    - name: Check TypeScript compilation
      run: |
        if [ -f "tsconfig.json" ]; then
          npx tsc --noEmit
        fi

  email-puller-build-test:
    name: Email Puller Build Test
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'

    - name: Install email puller dependencies
      run: |
        if [ -d "email-puller" ]; then
          cd email-puller
          npm ci
        fi

    - name: Build email puller
      run: |
        if [ -d "email-puller" ]; then
          cd email-puller
          npm run build || true
        fi

    - name: Verify email puller build
      run: |
        if [ -f "email-puller/dist/imap-puller.js" ]; then
          echo "‚úÖ Email puller build successful"
          ls -la email-puller/dist/imap-puller.js
        else
          echo "‚ö†Ô∏è  Email puller build not found (this may be expected during development)"
        fi

  frontend-build-test:
    name: Frontend Build Test
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Build frontend
      run: npm run build || true

    - name: Check build artifacts
      run: |
        if [ -d "dist" ]; then
          echo "‚úÖ Frontend build successful"
          ls -la dist/
        else
          echo "‚ö†Ô∏è  Frontend build directory not found"
        fi

  security-scan:
    name: Security Vulnerability Scan
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run security audit
      run: npm audit --audit-level=moderate || true

    - name: Check for known vulnerabilities
      run: |
        echo "üîç Security scan completed"
        echo "Note: This is a non-blocking check for awareness"

  summary:
    name: CI Summary
    runs-on: ubuntu-latest
    needs: [code-quality-checks, email-puller-build-test, frontend-build-test, security-scan]
    if: always()
    
    steps:
    - name: Display summary
      run: |
        echo "üöÄ Platform CI Checks Summary"
        echo "============================"
        echo "Code Quality: ${{ needs.code-quality-checks.result }}"
        echo "Email Puller Build: ${{ needs.email-puller-build-test.result }}"
        echo "Frontend Build: ${{ needs.frontend-build-test.result }}"
        echo "Security Scan: ${{ needs.security-scan.result }}"
        echo ""
        echo "‚ÑπÔ∏è  Note: This workflow only runs checks and tests."
        echo "‚ÑπÔ∏è  Deployment will be triggered automatically on commits to main branch."
        echo ""
        if [[ "${{ needs.code-quality-checks.result }}" == "success" && "${{ needs.frontend-build-test.result }}" == "success" ]]; then
          echo "‚úÖ All critical checks passed - ready for automatic deployment"
        else
          echo "‚ö†Ô∏è  Some checks failed - review before merging"
        fi
